lambda_m2 = sm2_coeffs["lambda","Estimate"]
rho_m2 = sm2_coeffs["rho","Estimate"]
betas_m2[b+1] = beta_m2
lambdas_m2[b+1] = lambda_m2
rhos_m2[b+1] = rho_m2
}
params_df =
tibble(b = bs, m=1, lambda=lambdas_m1, beta = betas_m1, rho = rhos_m1) %>%
bind_rows(tibble(b = bs, m=2, lambda=lambdas_m2, beta = betas_m2, rho = rhos_m2))
params_df
write_csv(params_df, params_df_filename)
}
params_df
df_market_curves_OG =
tibble(
t = 1:256,
`Massey Thaler\n2013 (1983-2008)\n` = v(t, beta=0.764, lambda=0.0994),
`Massey Thaler\n2013 (2001-2008)\n` = v(t, beta=0.698, lambda=0.146),
) %>%
pivot_longer(-t, names_to="m", values_to="v")
df_market_curves_OG
View(df_market_curves_OG)
df_market_curves_OG %>% select(t, `Massey Thaler\n2013 (2001-2008)\n`)
df_market_curves_OG
df_market_curves_OG %>% filter(str_detect(m, "2008"))
df_market_curves_OG %>% filter(str_detect(m, "1983"))
df_market_curves_OG
temp = df_market_curves_OG %>% filter(str_detect(m, "1983"))
temp
View(temp)
0.302 + 0.045 + 0.455
(.802 - 0.587) / 0.587
1.2 + 0.8 + 1.2
(3.2-1.1)/1.1*100
### example trades
ex_Dolphins_Raiders_JJ =
df_market_curves_OG %>%
filter(str_detect(m, "1983")) %>%
filter(t %in% c(3,12,42))
ex_Dolphins_Raiders_JJ
1050+470+450+210
(3088.6-2180)/2180
(2200 - 1680)/1680
(3088.6-2180)/2180
setwd("~/Dropbox/Mac (2)/Desktop/RESEARCH/NFL_draft_chart_Ryan")
####################################
### Replicate Massey Thaler 2013 ###
####################################
plot_Massey_Thaler_line_labels = c(
"performance" = "Expected\nperformance\nvalue\n",
"compensation" = "Cost",
"surplus" = "Expected\nsurplus\nvalue\n",
"JJ" = "Jimmy\nJohnson\n",
"market" = "\nFitted\ntrade\nmarket"
)
plot_Massey_Thaler_2B =
df_plot_Massey_Thaler_0 %>%
# left_join(df_jj %>% select(-value_jj) %>% rename(JJ = jj_v1)) %>%
left_join(df_trade_market_weibull %>% rename(market=V_G1) %>% select(-desc)) %>%
pivot_longer(-draft_pick) %>%
mutate(
ordering = case_when(
str_detect(name, "cost") ~ 2,
str_detect(name, "surplus") ~ 3,
str_detect(name, "perf") ~ 1,
str_detect(name, "trade") ~ 4,
str_detect(name, "Jimmy") ~ 5,
TRUE ~ 6,
),
) %>%
ggplot(aes(x=draft_pick,y=value,color=fct_reorder(name,ordering),linetype=fct_reorder(name,ordering))) +
# ggplot(aes(x=draft_pick,y=value,color=name)) +
geom_hline(yintercept=1, linetype="dashed", color="gray60", linewidth=1) +
geom_hline(yintercept=0, linetype="dashed", color="gray60", linewidth=1) +
geom_line(linewidth=2) +
scale_color_manual(
name="",
labels = plot_Massey_Thaler_line_labels,
values=c(
"performance" = "black",
"surplus" = "black",
"market" = "black",
"compensation" = "gray60",
"JJ" = "violet"
),
) +
scale_linetype_manual(
name="",
labels = plot_Massey_Thaler_line_labels,
values=c(
"performance" = "dotted",
"compensation" = "solid",
"surplus" = "longdash",
"JJ" = "solid",
"market" = "solid"
),
) +
theme(legend.key.width=unit(2.5,"cm")) +
xlab("Draft position") +
ylab("Value relative to first pick") +
scale_x_continuous(breaks=seq(1,32*9,by=32*2))
### load header
source("A2ndContract1_Header.R")
plot_Massey_Thaler_line_labels = c(
"performance" = "Expected\nperformance\nvalue\n",
"compensation" = "Cost",
"surplus" = "Expected\nsurplus\nvalue\n",
"JJ" = "Jimmy\nJohnson\n",
"market" = "\nFitted\ntrade\nmarket"
)
plot_Massey_Thaler_2B =
df_plot_Massey_Thaler_0 %>%
# left_join(df_jj %>% select(-value_jj) %>% rename(JJ = jj_v1)) %>%
left_join(df_trade_market_weibull %>% rename(market=V_G1) %>% select(-desc)) %>%
pivot_longer(-draft_pick) %>%
mutate(
ordering = case_when(
str_detect(name, "cost") ~ 2,
str_detect(name, "surplus") ~ 3,
str_detect(name, "perf") ~ 1,
str_detect(name, "trade") ~ 4,
str_detect(name, "Jimmy") ~ 5,
TRUE ~ 6,
),
) %>%
ggplot(aes(x=draft_pick,y=value,color=fct_reorder(name,ordering),linetype=fct_reorder(name,ordering))) +
# ggplot(aes(x=draft_pick,y=value,color=name)) +
geom_hline(yintercept=1, linetype="dashed", color="gray60", linewidth=1) +
geom_hline(yintercept=0, linetype="dashed", color="gray60", linewidth=1) +
geom_line(linewidth=2) +
scale_color_manual(
name="",
labels = plot_Massey_Thaler_line_labels,
values=c(
"performance" = "black",
"surplus" = "black",
"market" = "black",
"compensation" = "gray60",
"JJ" = "violet"
),
) +
scale_linetype_manual(
name="",
labels = plot_Massey_Thaler_line_labels,
values=c(
"performance" = "dotted",
"compensation" = "solid",
"surplus" = "longdash",
"JJ" = "solid",
"market" = "solid"
),
) +
theme(legend.key.width=unit(2.5,"cm")) +
xlab("Draft position") +
ylab("Value relative to first pick") +
scale_x_continuous(breaks=seq(1,32*9,by=32*2))
df_plot_Massey_Thaler_0
ex_Dolphins_Raiders_2013 =
df_plot_Massey_Thaler_0 %>%
filter(draft_pick %in% c(3,12,42))
ex_Dolphins_Raiders_2013
1.51 + 0.888
(1.02 - 2.398) / 2.398
ex_Rams_Titans_2016 =
df_plot_Massey_Thaler_0 %>%
filter(draft_pick %in% c(15,43,45,76))
ex_Rams_Titans_2016
ex_Rams_Titans_2016 =
df_plot_Massey_Thaler_0 %>%
filter(draft_pick %in% c(1,113,177,15,43,45,76))
ex_Rams_Titans_2016
ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(12,42))
ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(12,42)) %>% reframe(sum(surplus))
ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(3)) %>% reframe(sum(surplus))
ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(12,42)) %>% reframe(sum(surplus))
ex_Dolphins_Raiders_2013_U = ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(12,42)) %>% reframe(sum(surplus))
ex_Dolphins_Raiders_2013_D = ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(3)) %>% reframe(sum(surplus))
ex_Dolphins_Raiders_2013_U = ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(12,42)) %>% reframe(sum(surplus))
ex_Dolphins_Raiders_2013_D
ex_Dolphins_Raiders_2013_U
ex_Dolphins_Raiders_2013_D = ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(3)) %>% reframe(s=sum(surplus))
ex_Dolphins_Raiders_2013_U = ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(12,42)) %>% reframe(s=sum(surplus))
ex_Dolphins_Raiders_2013_D
ex_Dolphins_Raiders_2013_U
(ex_Dolphins_Raiders_2013_D$s - ex_Dolphins_Raiders_2013_U$s) / ex_Dolphins_Raiders_2013_U$s
(ex_Dolphins_Raiders_2013_D$s - ex_Dolphins_Raiders_2013_U$s) / ex_Dolphins_Raiders_2013_U$s * 100
ex_Rams_Titans_2016_D = ex_Rams_Titans_2016 %>% filter(draft_pick %in% c(3)) %>% reframe(s=sum(surplus))
ex_Rams_Titans_2016_U = ex_Rams_Titans_2016 %>% filter(draft_pick %in% c(12,42)) %>% reframe(s=sum(surplus))
ex_Rams_Titans_2016_D
ex_Rams_Titans_2016_U
ex_Rams_Titans_2016_D = ex_Rams_Titans_2016 %>% filter(draft_pick %in% c(1,113,177)) %>% reframe(s=sum(surplus))
ex_Rams_Titans_2016_U = ex_Rams_Titans_2016 %>% filter(draft_pick %in% c(15,43,45,76)) %>% reframe(s=sum(surplus))
ex_Rams_Titans_2016_D
ex_Rams_Titans_2016_U
ex_Rams_Titans_2016 %>% filter(draft_pick %in% c(1,113,177))
ex_Rams_Titans_2016 %>% filter(draft_pick %in% c(15,43,45,76))
ex_Rams_Titans_2016_U
(ex_Rams_Titans_2016_D$s - ex_Rams_Titans_2016_U$s) / ex_Rams_Titans_2016_U$s * 100
##################
### load stuff ###
##################
### load stan stuff
library(rstan)
rstan_options(auto_write = TRUE)
cores = 1
NUM_ITS = 2500
### load header
source("A2ndContract1_Header.R")
############################
### train the Stan model ###
############################
### training dataframe
df_train =
players_2C %>%
select(draft_pick, apy_cap_pct_2C, bust)
df_train
### new data dataframe
df_new =
as_tibble(expand.grid(
draft_pick = 1:256
)) %>% mutate(i = 1:n())
df_new
### x spline matrices
df_to_x_spl_mat <- function(df) {
# bs(df$draft_pick, degree=1, intercept=T)
bs(df$draft_pick, degree=3, df=4, intercept=T)
}
x_spl_mat_train = df_to_x_spl_mat(df_train)
x_spl_mat_new = df_to_x_spl_mat(df_new)
head(x_spl_mat_train)
head(x_spl_mat_new)
### data for stan
df_stan_train_list <- list(
n = nrow(df_train),
m = ncol(x_spl_mat_train),
x = df_train$draft_pick,
xmat = x_spl_mat_train,
bust = df_train$bust,
y = df_train$apy_cap_pct_2C,
n_new = nrow(df_new),
x_new = df_new$draft_pick,
xmat_new = x_spl_mat_new
)
df_stan_train_list
### stan file
filename = "betareg_stan_model_overall.stan"
STANMODEL <- stan_model(file = filename, model_name = filename)
STANMODEL
### train or load the stan model
# TRAIN_ME = TRUE
TRAIN_ME = FALSE
model_filename = paste0("model_fit_", str_remove_all(filename, "\\.stan"), ".rds")
if (TRAIN_ME | !file.exists(model_filename)) {
# Train the model
seed = 12345
set.seed(seed)
NUM_ITERS_IN_CHAIN = NUM_ITS
model_fit <-
sampling(
STANMODEL,
data = df_stan_train_list,
iter = NUM_ITERS_IN_CHAIN,
pars=c(
"alpha_0", "alpha_1", "beta", "gamma_0", "gamma_1",
"mu_new", "phi_new", "bust_prob_new"
),
include=TRUE,
chains = cores, #1 #cores,
cores = cores, # HPCC
seed = seed
)
### save model
saveRDS(model_fit, model_filename)
} else {
model_fit = readRDS(model_filename)
}
model_fit
### check convergence
df_summary = summary(model_fit)$summary
df_summary
vec_rhats = df_summary[,"Rhat"]
vec_rhats
vec_rhats1 = vec_rhats[!str_detect(names(vec_rhats), "_new") & !str_detect(names(vec_rhats), "lp__")]
vec_rhats1
all(vec_rhats1 < 1.1)
# hist(vec_rhats1)
#############################
### get posterior samples ###
#############################
### posterior summary
post_summary_vals = summary(model_fit)$summary
df_post_vals =
tibble(
name = rownames(post_summary_vals),
L = post_summary_vals[,"2.5%"],
M = post_summary_vals[,"mean"],
U = post_summary_vals[,"97.5%"]
)
# df_post_vals
df_post_vals %>% filter( str_detect(name, "alpha|beta|gamma") )
### posterior draws
post_draws_mat = as.matrix(model_fit)
dim(post_draws_mat)
df_post_draws_0 =
as.data.frame(post_draws_mat) %>%
mutate(draw = 1:n()) %>%
pivot_longer(-draw) %>%
filter(str_detect(name, "mu|phi|bust_prob")) %>%
mutate(
param = str_remove_all(str_replace_all(str_remove_all(name, "_new"), "[0-9]*", ""), "\\[|\\]"),
i = extract_numeric(name)
# i = readr::parse_number(name)
)
df_post_draws_0
df_post_draws =
df_post_draws_0 %>%
select(-name) %>%
pivot_wider(names_from="param", values_from=c("value")) %>%
mutate(
shape1 = mu*phi,
shape2 = (1-mu)*phi,
sd = sqrt(mu*(1-mu)/(1+phi)),
med = ifelse(
0.5 - bust_prob > 0, ### median_in_tail
qbeta(0.5 - bust_prob, shape1, shape2), ### median assuming the bust spike is uniform
0.5 * bust_cutoff / bust_prob ### median of the bust spike
),
) %>%
left_join(df_new) %>%
relocate(draft_pick, .after = i)
df_post_draws
sum(is.na(df_post_draws))
### posterior summary of tail probability
get_tail_prob_df <- function(q) {
print(paste0("computing tail prob for q=",q))
assertthat::assert_that(q > bust_cutoff)
df_post_draws %>%
mutate(
q = q,
tail_prob_given_notbust = pbeta(q, shape1, shape2, lower.tail = F),
tail_prob = (1-bust_prob)*tail_prob_given_notbust
) %>%
group_by(draw,q) %>%
mutate(tail_prob_1 = tail_prob/first(tail_prob)) %>%
group_by(i,q) %>%
summarise(
tail_prob_L = quantile(tail_prob, .025),
tail_prob_M = mean(tail_prob),
tail_prob_U = quantile(tail_prob, 0.975),
tail_prob_1_L = quantile(tail_prob_1, .025),
tail_prob_1_M = mean(tail_prob_1),
tail_prob_1_U = quantile(tail_prob_1, 0.975),
.groups = "drop"
)
}
df_post_summary_tail_prob = bind_rows(lapply(q_grid, get_tail_prob_df)) %>% left_join(df_new)
df_post_summary_tail_prob
### plot posterior tail probability
plot_tail_probs =
df_post_summary_tail_prob %>%
mutate(q1 = formattable::percent(q,perc_digits)) %>%
ggplot(aes(
x = draft_pick, y = tail_prob_M,
)) +
geom_ribbon(aes(ymin = tail_prob_U, ymax=tail_prob_L,fill=factor(q1)), alpha = 0.35) +
geom_line(linewidth=2, aes(color=factor(q1))) +
xlab("Draft position") +
ylab("Probability") +
# scale_color_manual(name="Eliteness cutoff\n(percentage of cap)", values = my_palette_1) +
# scale_fill_manual(name="Eliteness cutoff\n(percentage of cap)", values = my_palette_1) +
scale_color_brewer(name="Right tail probability\neliteness cutoff\n(percentage of cap)", palette = "Set1") +
scale_fill_brewer(name="Right tail probability\neliteness cutoff\n(percentage of cap)", palette = "Set1") +
scale_x_continuous(breaks=seq(1,32*9,by=32*2))
df_post_summary_tail_prob_1 =
bind_rows(
df_post_summary_tail_prob %>%
rename(v1 = tail_prob_1_M) %>%
select(draft_pick,q,v1, tail_prob_1_L, tail_prob_1_U) %>%
mutate(desc = "right_tail_prob"),
df_plot_Massey_Thaler_0 %>%
rename(v1 = performance) %>%
select(draft_pick, v1) %>%
mutate(desc = "performance"),
df_trade_market_weibull %>%
mutate(desc = "market") %>%
rename(v1 = V_G1)
)
df_post_summary_tail_prob_1
plot_tail_probs_labels = c(
"right_tail_prob" = "Right\ntail\nprobability",
"performance" = "Expected\nperformance\nvalue",
"market" = "Fitted\ntrade\nmarket\n"
)
plot_tail_probs_relative_2_SE =
df_post_summary_tail_prob_1 %>%
mutate(q1 = formattable::percent(q,perc_digits)) %>%
ggplot(aes(x = draft_pick, y = v1)) +
geom_ribbon(aes(ymin = tail_prob_1_L, ymax=tail_prob_1_U, fill = factor(q1)),
data = . %>% filter(!is.na(q)), alpha = 0.35) +
geom_line(linewidth=2, aes(color=factor(q1)), data = . %>% filter(!is.na(q))) +
geom_line(linewidth=2, aes(linetype=desc), data = . %>% filter(is.na(q)) ) +
xlab("Draft position") +
ylab("Value relative to first pick") +
scale_linetype_manual(
name="",
labels = plot_tail_probs_labels,
values=c(
"right_tail_prob" = "solid",
"performance" = "dotted",
"surplus" = "longdash",
"market" = "solid"
),
) +
theme(legend.key.width=unit(2.5,"cm")) +
scale_color_brewer(
name="Right tail probability\neliteness cutoff\n(percentage of cap)",
palette = "Set1"
) +
scale_fill_brewer(
name="Right tail probability\neliteness cutoff\n(percentage of cap)",
palette = "Set1"
) +
theme(
legend.text = element_text(size=16),
legend.title = element_text(size=16),
# legend.spacing.y = unit(0, "pt"),
legend.spacing.y = unit(0, "lines"),
legend.margin = margin(0, 0, 0, 0),
) +
scale_x_continuous(breaks=seq(1,32*9,by=32*2))
plot_tail_probs_relative_2_SE
df_post_summary_tail_prob_1
df_post_summary_tail_prob_1
View(df_post_summary_tail_prob_1)
ex_Dolphins_Raiders_2013 =
df_post_summary_tail_prob_1 %>%
filter(q == 0.178) %>%
filter(draft_pick %in% c(3,12,42))
ex_Dolphins_Raiders_2013
df_post_summary_tail_prob_1 %>%
filter(q == 0.178)
View(df_post_summary_tail_prob_1)
unique(df_post_summary_tail_prob_1$q)
ex_Dolphins_Raiders_2013 =
df_post_summary_tail_prob_1 %>%
filter(q == 0.178)
ex_Dolphins_Raiders_2013
df_post_summary_tail_prob_1
table(df_post_summary_tail_prob_1$q)
df_post_summary_tail_prob_1 %>%
filter(q == 0.178)
ex_Dolphins_Raiders_2013 =
df_post_summary_tail_prob_1 %>%
arrange(abs(q - 0.178)) %>%
filter(draft_pick %in% c(3,12,42))
ex_Dolphins_Raiders_2013
ex_Dolphins_Raiders_2013 =
df_post_summary_tail_prob_1 %>%
arrange(abs(q - 0.178)) %>%
filter(draft_pick %in% c(3,12,42)) %>%
head(3)
ex_Dolphins_Raiders_2013
ex_Dolphins_Raiders_2013_D = ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(3)) %>% reframe(s=sum(surplus))
ex_Dolphins_Raiders_2013_U = ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(12,42)) %>% reframe(s=sum(surplus))
ex_Dolphins_Raiders_2013_D
ex_Dolphins_Raiders_2013_D = ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(3)) %>% reframe(s=sum(v1))
ex_Dolphins_Raiders_2013_U = ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(12,42)) %>% reframe(s=sum(v1))
ex_Dolphins_Raiders_2013_D
ex_Dolphins_Raiders_2013_U
ex_Dolphins_Raiders_2013
ex_Dolphins_Raiders_2013_D = ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(3)) %>% reframe(s=sum(v1))
ex_Dolphins_Raiders_2013_U = ex_Dolphins_Raiders_2013 %>% filter(draft_pick %in% c(12,42)) %>% reframe(s=sum(v1))
ex_Dolphins_Raiders_2013_D
ex_Dolphins_Raiders_2013_U
(ex_Dolphins_Raiders_2013_D$s - ex_Dolphins_Raiders_2013_U$s) / ex_Dolphins_Raiders_2013_U$s * 100
ex_Rams_Titans_2016 =
df_post_summary_tail_prob_1 %>%
arrange(abs(q - 0.178)) %>%
filter(draft_pick %in% c(3,12,42)) %>%
head(3)
ex_Rams_Titans_2016
ex_Rams_Titans_2016_D = ex_Rams_Titans_2016 %>% filter(draft_pick %in% c(1,113,177)) %>% reframe(s=sum(v1))
ex_Rams_Titans_2016_U = ex_Rams_Titans_2016 %>% filter(draft_pick %in% c(15,43,45,76)) %>% reframe(s=sum(v1))
ex_Rams_Titans_2016_D
ex_Rams_Titans_2016_U
ex_Rams_Titans_2016 =
df_post_summary_tail_prob_1 %>%
arrange(abs(q - 0.178)) %>%
filter(draft_pick %in% c(1,113,177,15,43,45,76)) %>%
head(3)
ex_Rams_Titans_2016
ex_Rams_Titans_2016 =
df_post_summary_tail_prob_1 %>%
arrange(abs(q - 0.178)) %>%
filter(draft_pick %in% c(1,113,177,15,43,45,76)) %>%
head(7)
ex_Rams_Titans_2016
ex_Rams_Titans_2016_D = ex_Rams_Titans_2016 %>% filter(draft_pick %in% c(1,113,177)) %>% reframe(s=sum(v1))
ex_Rams_Titans_2016_U = ex_Rams_Titans_2016 %>% filter(draft_pick %in% c(15,43,45,76)) %>% reframe(s=sum(v1))
ex_Rams_Titans_2016_D
ex_Rams_Titans_2016_U
(ex_Rams_Titans_2016_D$s - ex_Rams_Titans_2016_U$s) / ex_Rams_Titans_2016_U$s * 100
(ex_Rams_Titans_2016_U$s - ex_Rams_Titans_2016_D$s) / ex_Rams_Titans_2016_D$s * 100
(3.81-1.52)/1.52
(3.81-1.52)/1.52*100
(2200-1680)/1680
(2.4-1.02)/1.02*100
0.581 + 0.101
ex_Dolphins_Raiders_2013
0.538 + 0.101
(.893 - .639) / .639
(.893 - .639) / .639 * 100
